'use strict';

(function (DOC, WIN) {
    var BODY = DOC.body;
    var FOOTER = DOC.querySelector('footer');

    // 工具函数

    /**
     * 随机重排数组
     * @param arr
     * @returns {*}
     */
    var randomArr = function randomArr(arr) {
        Array.prototype.sort.call(arr, function () {
            return Math.random() > 0.5 ? 1 : -1;
        });
        return arr;
    };

    /**
     * 随机获取数组的某个元素
     * @param arr
     * @param num
     * @returns {*}
     */
    var getRandomArrEle = function getRandomArrEle(arr, num) {
        if (num > arr.length || num <= 0) return false;
        var result = [];
        for (var i = 0; i < num; i++) {
            var singleElement = Math.floor(Math.random() * arr.length + 1) - 1;
            result.push(arr.splice(singleElement, 1)[0]);
        }
        return result;
    };

    /**
     * 隐藏所有模块
     */
    var hideOtherModule = function hideOtherModule() {
        var modules = Array.prototype.slice.call(DOC.querySelectorAll('main>div'));
        modules.forEach(function (e) {
            if (e.style.display === 'block') e.style.display = 'none';
        });
    };

    // main

    /**
     * 主屏按钮
     */
    var index = function index() {
        var indexBtn = DOC.querySelector('#indexBtn');
        indexBtn.addEventListener('click', function () {
            hideOtherModule();
            DOC.querySelector('main').style.display = 'none';
        }, false);
    };

    /**
     * 填充签到页面的内容
     */
    var signInView = function signInView() {
        var sumNumView = DOC.querySelector('.signIn header i'),
            signView = DOC.querySelector('.signIn ul'),
            postData = 0;

        var poll = function poll(url) {
            $.ajax({
                type: 'POST',
                url: url,
                cache: false,
                data: JSON.stringify(postData),
                success: function success(data) {
                    data = JSON.parse(data);
                    postData = data.length;

                    var signHtml = '';
                    sumNumView.innerHTML = data.length;
                    data.forEach(function (e) {
                        if (!e.headImgUrl) e.headImgUrl = "http://o7qephszd.bkt.clouddn.com/wechatDefaultHeadImg.png";
                        signHtml += '<li><img src=' + e.headImgUrl + ' alt="headImg"><p>' + e.nickname + '</p></li>';
                    });
                    signView.innerHTML = signHtml;
                    poll(url);
                },
                error: function error() {
                    poll(url);
                }
            });
        };

        DOC.querySelector('#SignBtn').addEventListener('click', function () {
            hideOtherModule();
            if (DOC.querySelector('main').style.display === 'none') DOC.querySelector('main').style.display = 'block';
            DOC.querySelector('.signIn').style.display = 'block';
            poll('http://120.26.53.25/wechat/Project/api/getActiveUser/');
        }, false);
    };

    /**
     * 消息上墙
     */
    var messageView = function messageView() {
        var postData = 0;
        var updateMsg = function updateMsg(url) {
            $.ajax({
                type: 'POST',
                url: url,
                cache: false,
                data: JSON.stringify(postData),
                success: function success(data) {
                    data = JSON.parse(data);
                    postData = data.length;
                    var htmlStr = '';
                    data.forEach(function (e) {
                        htmlStr += '<li><img src="' + e.headImgUrl + '" alt=""><div><p>' + e.nickname + '</p><strong>' + e.content + '</strong></div></li>';
                    });
                    DOC.querySelector('.message .pull-right').innerHTML = htmlStr;
                    updateMsg(url);
                },
                error: function error() {
                    updateMsg(url);
                }
            });
        };

        // 开启消息模块
        DOC.querySelector('#msgBtn').addEventListener('click', function () {
            hideOtherModule();
            if (DOC.querySelector('main').style.display === 'none') DOC.querySelector('main').style.display = 'block';
            DOC.querySelector('.message').style.display = 'block';
            updateMsg('http://120.26.53.25/wechat/Project/api/getMessage/');
        }, false);
    };

    /**
     * 倒计时按钮
     */
    var countdown = function countdown() {
        var timeBtn = DOC.querySelector('#timeBtn');
        timeBtn.addEventListener('click', function () {
            var timeDom = DOC.querySelector('.time'),
                timeText = DOC.querySelector('#timeText'),
                btn = DOC.querySelector('.time button');
            hideOtherModule();
            if (DOC.querySelector('main').style.display === 'none') DOC.querySelector('main').style.display = 'block';
            timeDom.style.display = 'block';
            var timeBox = echarts.init(document.getElementById('timeBox'));
            var time = {
                total: 60,
                used: 0
            };

            timeText.innerHTML = time.total - time.used;
            timeText.style.marginLeft = -parseInt(WIN.getComputedStyle(timeText, null).width) / 2 + 'px';
            timeText.style.marginTop = -parseInt(WIN.getComputedStyle(timeText, null).height) / 2 + 'px';
            var option = {
                series: [{
                    type: 'pie',
                    radius: ['50%', '70%'],
                    label: {
                        normal: {
                            show: false,
                            position: 'center'
                        },
                        emphasis: {
                            show: false
                        }
                    },
                    data: [{ value: time.used, name: '' }, { value: time.total - time.used, name: '' }]
                }]
            };
            timeBox.setOption(option);

            var timeAnimation = function timeAnimation() {
                if (time.used >= 60) {
                    timeText.innerHTML = '时间到';
                    timeText.style.marginLeft = -parseInt(WIN.getComputedStyle(timeText, null).width) / 2 + 'px';
                    timeText.style.marginTop = -parseInt(WIN.getComputedStyle(timeText, null).height) / 2 + 'px';
                    btn.removeAttribute('disabled');
                    return true;
                }
                time.used++;
                timeText.style.marginLeft = -parseInt(WIN.getComputedStyle(timeText, null).width) / 2 + 'px';
                timeText.style.marginTop = -parseInt(WIN.getComputedStyle(timeText, null).height) / 2 + 'px';
                var option = {
                    series: [{
                        type: 'pie',
                        radius: ['50%', '70%'],
                        label: {
                            normal: {
                                show: false,
                                position: 'center'
                            },
                            emphasis: {
                                show: false
                            }
                        },
                        data: [{ value: time.used, name: '' }, { value: time.total - time.used, name: '' }]
                    }]
                };
                timeBox.setOption(option);
                timeText.innerHTML = time.total - time.used;
                setTimeout(timeAnimation, 1000);
            };
            btn.addEventListener('click', function () {
                btn.setAttribute('disabled', 'disabled');
                timeAnimation();
            }, false);
        }, false);
    };

    /**
     * 抽奖
     */
    var prize = function prize() {
        // 动画开关
        var animationSwitch = false;

        // 抽奖内部函数

        /**
         * 填充奖品等级选项卡
         * @param prizeData
         */
        var paddingPrizeLevel = function paddingPrizeLevel(prizeData) {
            var prizeLevelList = '';
            prizeData.forEach(function (e) {
                prizeLevelList += '<li>' + e.level + '</li>';
            });
            DOC.querySelector('.prizeLevel ul').innerHTML = prizeLevelList;
            DOC.querySelector('.prizeLevel p i').innerHTML = DOC.querySelector('.prizeLevel ul').firstElementChild.innerHTML;
        };

        /**
         * 显示隐藏奖品选项卡
         */
        var togglePrizeLevel = function togglePrizeLevel() {
            if (DOC.querySelector('.prizeLevel ul').className === 'hide') {
                DOC.querySelector('.prizeLevel ul').className = 'show';
            } else {
                DOC.querySelector('.prizeLevel ul').className = 'hide';
            }
        };

        /**
         * 填充下方的奖品图片
         * @param prizeData
         */
        var paddingPrizeImg = function paddingPrizeImg(prizeData) {
            prizeData.forEach(function (e) {
                if (e.level === DOC.querySelector('.prizeLevel p i').innerHTML) {
                    DOC.querySelector('.prizePic img').src = e.picUrl;
                }
            });
        };

        /**
         * 更新左侧选中抽奖的用户和右侧的数量
         * @param prizeData
         * @param toPrizeUser
         * 判断奖品数量
         * 判断剩余没中奖的用户数量
         * 让两者同步
         */
        var updateToPrizeUserNumView = function updateToPrizeUserNumView(prizeData, toPrizeUser) {
            var prizeNum = 0,
                toPrizeUserNum = toPrizeUser.length;
            prizeData.forEach(function (e) {
                if (DOC.querySelector('.prizeLevel p i').innerHTML === e.level) {
                    prizeNum = e.num;
                }
            });
            if (DOC.querySelector('.prizeNum span').innerHTML > Math.min(prizeNum, toPrizeUserNum)) {
                DOC.querySelector('.prizeNum span').innerHTML = Math.min(prizeNum, toPrizeUserNum);
            }
            var htmlStr = '';
            for (var i = 0; i < DOC.querySelector('.prize .pull-right .prizeNum span').innerHTML; i++) {
                htmlStr += '<li><img src="http://o7qephszd.bkt.clouddn.com/wechatDefaultHeadImg.png"><p>...</p></li>';
            }
            DOC.querySelector('.prize .pull-left ul').innerHTML = htmlStr;
        };

        /**
         * 抽奖动画
         * @param toPrizeUser
         * @param singleToPrizeUserArr
         * @param intervalTime
         * @param flag
         */
        var prizeAnimation = function prizeAnimation(toPrizeUser, singleToPrizeUserArr, intervalTime) {
            var flag = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];

            var li = Array.prototype.slice.call(DOC.querySelectorAll('.prize .pull-left ul li'));
            if (flag >= singleToPrizeUserArr.length) flag = 0;
            li.forEach(function (e) {
                e.querySelector('img').src = toPrizeUser[singleToPrizeUserArr[flag]].headImgUrl;
                e.querySelector('p').innerHTML = toPrizeUser[singleToPrizeUserArr[flag]].nickname;
            });
            setTimeout(function () {
                if (!animationSwitch) return;
                prizeAnimation(toPrizeUser, singleToPrizeUserArr, intervalTime, ++flag);
            }, intervalTime);
        };

        /**
         * 抽奖烟雾弹
         * @param prizeData
         * @param toPrizeUser
         * @param intervalTime
         * 构建单组顺序的要抽奖的用户组
         * 构建左侧视图是混乱的全部用户组
         */
        var prizeBomb = function prizeBomb(prizeData, toPrizeUser) {
            // 单组顺序的要抽奖的用户组
            var singleToPrizeUserArr = [];
            for (var i = 0; i < toPrizeUser.length; i++) {
                singleToPrizeUserArr.push(i);
            }
            singleToPrizeUserArr = randomArr(singleToPrizeUserArr);

            prizeAnimation(toPrizeUser, singleToPrizeUserArr, 100);
        };

        /**
         * 构建中奖的用户组
         * @param toPrizeUser
         * @returns {Array}
         */
        var createWinningUsers = function createWinningUsers(toPrizeUser) {
            var arr = [],
                winningUsersSub = [],
                winningUsers = [];
            for (var i = 0; i < toPrizeUser.length; i++) {
                arr.push(i);
            }
            winningUsersSub = getRandomArrEle(arr, DOC.querySelectorAll('.prize .pull-left ul li').length);
            winningUsersSub.forEach(function (e) {
                winningUsers.push(toPrizeUser[e]);
            });
            return winningUsers;
        };

        /**
         * 填充中奖的用户到左侧小窗口
         * @param winningUsers
         */
        var paddingWinningUsers = function paddingWinningUsers(winningUsers) {
            var li = Array.prototype.slice.call(DOC.querySelectorAll('.prize .pull-left ul li'));
            for (var i = 0; i < li.length; i++) {
                li[i].querySelector('img').src = winningUsers[i].headImgUrl;
                li[i].querySelector('p').innerHTML = winningUsers[i].nickname;
            }
        };

        /**
         * 将中奖用户数据保存到数据库
         * @param prizeData
         * @param prizewinningUsers
         */
        var saveWinningUsersToServer = function saveWinningUsersToServer(prizeData, prizewinningUsers) {
            var resultData = [],
                prizeId = null;
            // 获取当前的奖品等级
            prizeData.forEach(function (e) {
                if (DOC.querySelector('.prizeLevel p i').innerHTML === e.level) prizeId = e.id;
            });
            // 构建要传输的数据包
            prizewinningUsers.forEach(function (e) {
                var arr = {};
                arr.openid = e.openid;
                arr.prizeId = prizeId;
                resultData.push(arr);
            });
            resultData = JSON.stringify(resultData);
            $.post('http://120.26.53.25/wechat/Project/api/receivePrizeUser/', resultData);
        };

        // 初始化
        var init = function init() {

            // 获取到数据库的奖品数据
            $.getJSON('http://120.26.53.25/wechat/Project/api/getPrizeData/', function (prizeData) {

                // 获取数据库可以参加抽奖的用户数据
                $.getJSON('http://120.26.53.25/wechat/Project/api/getToPrizeUser/', function (toPrizeUsers) {

                    // 填充奖品等级选项卡
                    paddingPrizeLevel(prizeData);

                    // 填充下方的奖品图片
                    paddingPrizeImg(prizeData);

                    // 显示隐藏奖品选项卡
                    DOC.querySelector('.prizeLevel').addEventListener('click', togglePrizeLevel, false);

                    // 切换奖品选项
                    DOC.querySelector('.prizeLevel ul').addEventListener('click', function (event) {
                        var e = WIN.event || event;
                        if (e.target.nodeName === 'LI') {
                            DOC.querySelector('.prizeLevel p i').innerHTML = e.target.innerHTML;
                            paddingPrizeImg(prizeData);
                            updateToPrizeUserNumView(prizeData, toPrizeUsers);
                        }
                    }, false);

                    // 减少左侧选定用户的数量
                    DOC.querySelector('.lessBtn').addEventListener('click', function () {
                        var num = parseInt(DOC.querySelector('.prizeNum span').innerHTML);
                        if (num > 0) {
                            DOC.querySelector('.prizeNum span').innerHTML = --num;
                            updateToPrizeUserNumView(prizeData, toPrizeUsers);
                        }
                    }, false);

                    // 减少左侧选定用户的数量
                    DOC.querySelector('.addBtn').addEventListener('click', function () {
                        var userNum = toPrizeUsers.length,
                            prizeNum = 0;
                        console.log(userNum);
                        prizeData.forEach(function (e) {
                            if (e.level === DOC.querySelector('.prizeLevel i').innerHTML) {
                                prizeNum = e.num;
                            }
                        });
                        var num = parseInt(DOC.querySelector('.prizeNum span').innerHTML);
                        if (num < Math.min(userNum, prizeNum)) {
                            DOC.querySelector('.prizeNum span').innerHTML = ++num;
                            updateToPrizeUserNumView(prizeData, toPrizeUsers);
                        }
                    }, false);

                    // 开始或停止抽奖
                    DOC.querySelector('.prizeBtn').addEventListener('click', function (event) {
                        var e = WIN.event || event;
                        if (e.target.innerHTML === 'start') {
                            if (toPrizeUsers.length <= 0) {
                                DOC.querySelector('.weui_dialog_alert').style.display = 'block';
                                return 0;
                            }
                            // 开始抽奖
                            animationSwitch = true;
                            e.target.innerHTML = 'stop';
                            prizeBomb(prizeData, toPrizeUsers);
                        } else {
                            // 停止抽奖
                            animationSwitch = false;
                            e.target.innerHTML = 'start';
                            var winningUsers = createWinningUsers(toPrizeUsers);
                            paddingWinningUsers(winningUsers);
                            saveWinningUsersToServer(prizeData, winningUsers);
                        }
                        $.getJSON('http://120.26.53.25/wechat/Project/api/getToPrizeUser/', function (toPrizeUser) {
                            toPrizeUsers = toPrizeUser;
                        });
                    }, false);
                });
            });
        };

        // 开启抽奖模块视图
        DOC.querySelector('#giftBtn').addEventListener('click', function () {
            init();
            hideOtherModule();
            if (DOC.querySelector('main').style.display === 'none') DOC.querySelector('main').style.display = 'block';
            DOC.querySelector('.prize').style.display = 'block';
        }, false);
    };

    /**
     * 排名
     */
    var vote = function vote() {
        var voteBtn = DOC.querySelector('#voteBtn');
        voteBtn.addEventListener('click', function () {
            var vote = DOC.querySelector('.vote'),
                jsonStr = '';
            vote.className = 'vote show';
            var voteMain = echarts.init(DOC.querySelector('.voteMain')),
                num = DOC.querySelector('.vote i');

            var poll = function poll(url) {
                $.getJSON(url, function (json) {
                    if (jsonStr !== JSON.stringify(json)) {
                        var sum = 0;
                        json.forEach(function (e) {
                            sum += parseInt(e.num);
                        });
                        num.innerHTML = sum;
                        var option = {
                            color: ['#3398DB'],
                            tooltip: {
                                trigger: 'axis',
                                axisPointer: { // 坐标轴指示器，坐标轴触发有效
                                    type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                                }
                            },
                            grid: {
                                left: '3%',
                                right: '4%',
                                bottom: '3%',
                                containLabel: true
                            },
                            xAxis: [{
                                type: 'category',
                                data: [json[0].lead, json[1].lead, json[2].lead, json[3].lead],
                                axisTick: {
                                    alignWithLabel: true
                                },
                                axisLabel: {
                                    textStyle: {
                                        color: '#fff'
                                    }
                                }
                            }],
                            yAxis: [{
                                type: 'value',
                                axisLabel: {
                                    textStyle: {
                                        color: '#fff'
                                    }
                                }
                            }],
                            series: [{
                                name: '票数',
                                type: 'bar',
                                barWidth: '60%',
                                data: [json[0].num, json[1].num, json[2].num, json[3].num]
                            }]
                        };
                        voteMain.setOption(option);
                        jsonStr = JSON.stringify(json);
                    }
                });
                setTimeout(function () {
                    poll(url);
                }, 5000);
            };
            poll('http://120.26.53.25/wechat/Project/api/vote');
        }, false);
    };

    /**
     * footer移入移出的动画效果
     */
    var footerAnimation = function footerAnimation() {
        FOOTER.addEventListener('mouseover', function () {
            FOOTER.className = 'hover';
        }, false);
        FOOTER.addEventListener('mouseout', function () {
            FOOTER.className = '';
        }, false);
    };

    /**
     * 设置背景
     */
    var setting = function setting() {
        var setCloseBtn = DOC.querySelector('#setCloseBtn'),
            setBtn = DOC.querySelector('#setBtn');

        var bgUrls = {
            bg1Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg1.jpg',
            bg2Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg2.jpg',
            bg3Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg3.jpg',
            bg4Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg4.jpg',
            bg5Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg5.jpg',
            bg6Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg6.jpg',
            bg7Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg7.jpg',
            bg8Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg8.jpg',
            bg9Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg9.jpg',
            bg10Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg10.jpg',
            bg11Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg11.jpg',
            bg12Url: 'http://o7qephszd.bkt.clouddn.com/wechatBg12.jpg'
        };
        setBtn.addEventListener('click', function () {
            setCloseBtn.parentNode.parentNode.className = 'show';
            setTimeout(function () {
                setCloseBtn.parentNode.parentNode.style = 'opacity:1';
            }, 1);
        }, false);
        setCloseBtn.addEventListener('click', function () {
            setCloseBtn.parentNode.parentNode.style = 'opacity:0';
            setTimeout(function () {
                setCloseBtn.parentNode.parentNode.className = 'hide';
            }, 500);
        }, false);
        DOC.querySelector('#setBgBox ul').addEventListener('click', function (event) {
            var e = WIN.event || event;
            if (e.target.nodeName === 'IMG') {
                BODY.style.background = 'url(' + bgUrls[e.target.dataset['flag']] + ') center no-repeat';
            }
        }, false);
    };

    var toggleAlert = function toggleAlert() {
        DOC.querySelector('.weui_dialog_alert').addEventListener('click', function (event) {
            var e = WIN.event || event;
            if (e.target.nodeName === 'A' && DOC.querySelector('.weui_dialog_alert').style.display === 'block') {
                DOC.querySelector('.weui_dialog_alert').style.display = 'none';
            } else if (e.target.nodeName === 'A' && DOC.querySelector('.weui_dialog_alert').style.display === 'none') {
                DOC.querySelector('.weui_dialog_alert').style.display = 'block';
            }
        }, false);
    };

    // 加载界面
    WIN.addEventListener('load', function () {
        DOC.querySelector('#loadingToast').style.display = 'none';
    });

    index();
    signInView();
    messageView();
    countdown();
    prize();
    // vote();
    footerAnimation();
    setting();
    toggleAlert();
})(document, window);